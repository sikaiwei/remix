{
	"id": "f82ab74404140dcf4102b4307125f4f8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"tests/MostSignificantBit-us.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.24;\r\n\r\ncontract MostSignificantBit{\r\n    // 10101010 -> 7\r\n    function findMostSignificantBit(uint256 x) external pure returns(uint8 r){\r\n        // x >= 2 ** 128\r\n        if ( x >= 2 ** 128){\r\n            x >>=128;\r\n            r += 128;\r\n        }\r\n        // x >= 2 ** 64\r\n        if (x >= 2 ** 64){\r\n            x >>= 64;\r\n            r += 64;\r\n        }\r\n        // x >= 2 ** 32\r\n        if (x >= 2 ** 32){\r\n            x >>= 32;\r\n            r += 32;\r\n        }\r\n        // x >= 2 ** 16\r\n        if (x >= 2 ** 16){\r\n            x >>= 16;\r\n            r += 16;\r\n        }\r\n        // x >= 2 ** 8\r\n        if (x>=2 ** 8){\r\n            x >>= 8;\r\n            r +=8;\r\n        }\r\n        //x>=2**4\r\n        if (x >= 2 ** 4){\r\n            x >>= 4;\r\n            r += 4;\r\n        }\r\n        // x >= 2 ** 2\r\n        if (x >= 2 ** 2){\r\n            x >>= 2;\r\n            r +=  2;\r\n        }\r\n        // x >=2 ** 1\r\n        if (x >= 2 ** 1){\r\n            r +=  1;\r\n        }\r\n    }\r\n\r\n    // MSB 函数： 使用汇编语言优化\r\n    function mostSignificantBit(uint256 x) public pure returns(uint256 r) {\r\n        // 两种写法：\r\n        // assembly {\r\n        //     // 比较和位移操作的汇编实现\r\n        //     if gt(x, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF) {\r\n        //         x := shr(128, x)\r\n        //         r := add(r, 128)\r\n        //     }\r\n        // }\r\n\r\n        assembly {\r\n            let f := shl(7, gt(x, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\r\n            x := shr(f, x)\r\n            // or can be replaced with add\r\n            r := or(r, f)\r\n        }\r\n\r\n        assembly {\r\n            let f := shl(6, gt(x, 0xFFFFFFFFFFFFFFFF))\r\n            x := shr(f, x)\r\n            r := or(r, f)\r\n        }\r\n\r\n\r\n        assembly {\r\n            let f := shl(5, gt(x, 0xFFFFFFFF))\r\n            x := shr(f, x)\r\n            r := or(r, f)\r\n        }\r\n\r\n        assembly {\r\n            let f := shl(4, gt(x, 0xFFFF))\r\n            x := shr(f, x)\r\n            r := or(r, f)\r\n        }\r\n\r\n        assembly {\r\n            let f := shl(3, gt(x, 0xFF))\r\n            x := shr(f, x)\r\n            r := or(r, f)\r\n        }\r\n\r\n\r\n        assembly {\r\n            let f := shl(2, gt(x, 0xF))\r\n            x := shr(f, x)\r\n            r := or(r, f)\r\n        }\r\n\r\n        assembly {\r\n            let f := shl(1, gt(x, 0x3))\r\n            x := shr(f, x)\r\n            r := or(r, f)\r\n        }\r\n\r\n        assembly {\r\n            let f := gt(x, 0x1)\r\n            r := or(r, f)\r\n        }\r\n\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"tests/MostSignificantBit-us.sol": {
				"MostSignificantBit": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "findMostSignificantBit",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "r",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "mostSignificantBit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "r",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"tests/MostSignificantBit-us.sol\":60:2545  contract MostSignificantBit{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"tests/MostSignificantBit-us.sol\":60:2545  contract MostSignificantBit{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x483d868d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe6bcbc65\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"tests/MostSignificantBit-us.sol\":116:1028  function findMostSignificantBit(uint256 x) external pure returns(uint8 r){... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tests/MostSignificantBit-us.sol\":1083:2540  function mostSignificantBit(uint256 x) public pure returns(uint256 r) {... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tests/MostSignificantBit-us.sol\":116:1028  function findMostSignificantBit(uint256 x) external pure returns(uint8 r){... */\n    tag_8:\n        /* \"tests/MostSignificantBit-us.sol\":181:188  uint8 r */\n      0x00\n        /* \"tests/MostSignificantBit-us.sol\":236:244  2 ** 128 */\n      0x0100000000000000000000000000000000\n        /* \"tests/MostSignificantBit-us.sol\":231:232  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":231:244  x >= 2 ** 128 */\n      lt\n        /* \"tests/MostSignificantBit-us.sol\":226:303  if ( x >= 2 ** 128){... */\n      tag_17\n      jumpi\n        /* \"tests/MostSignificantBit-us.sol\":265:268  128 */\n      0x80\n        /* \"tests/MostSignificantBit-us.sol\":260:268  x >>=128 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":288:291  128 */\n      0x80\n        /* \"tests/MostSignificantBit-us.sol\":283:291  r += 128 */\n      dup2\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      swap1\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":226:303  if ( x >= 2 ** 128){... */\n    tag_17:\n        /* \"tests/MostSignificantBit-us.sol\":347:354  2 ** 64 */\n      0x010000000000000000\n        /* \"tests/MostSignificantBit-us.sol\":342:343  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":342:354  x >= 2 ** 64 */\n      lt\n        /* \"tests/MostSignificantBit-us.sol\":338:412  if (x >= 2 ** 64){... */\n      tag_20\n      jumpi\n        /* \"tests/MostSignificantBit-us.sol\":376:378  64 */\n      0x40\n        /* \"tests/MostSignificantBit-us.sol\":370:378  x >>= 64 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":398:400  64 */\n      0x40\n        /* \"tests/MostSignificantBit-us.sol\":393:400  r += 64 */\n      dup2\n      tag_21\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_21:\n      swap1\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":338:412  if (x >= 2 ** 64){... */\n    tag_20:\n        /* \"tests/MostSignificantBit-us.sol\":456:463  2 ** 32 */\n      0x0100000000\n        /* \"tests/MostSignificantBit-us.sol\":451:452  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":451:463  x >= 2 ** 32 */\n      lt\n        /* \"tests/MostSignificantBit-us.sol\":447:521  if (x >= 2 ** 32){... */\n      tag_22\n      jumpi\n        /* \"tests/MostSignificantBit-us.sol\":485:487  32 */\n      0x20\n        /* \"tests/MostSignificantBit-us.sol\":479:487  x >>= 32 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":507:509  32 */\n      0x20\n        /* \"tests/MostSignificantBit-us.sol\":502:509  r += 32 */\n      dup2\n      tag_23\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_23:\n      swap1\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":447:521  if (x >= 2 ** 32){... */\n    tag_22:\n        /* \"tests/MostSignificantBit-us.sol\":565:572  2 ** 16 */\n      0x010000\n        /* \"tests/MostSignificantBit-us.sol\":560:561  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":560:572  x >= 2 ** 16 */\n      lt\n        /* \"tests/MostSignificantBit-us.sol\":556:630  if (x >= 2 ** 16){... */\n      tag_24\n      jumpi\n        /* \"tests/MostSignificantBit-us.sol\":594:596  16 */\n      0x10\n        /* \"tests/MostSignificantBit-us.sol\":588:596  x >>= 16 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":616:618  16 */\n      0x10\n        /* \"tests/MostSignificantBit-us.sol\":611:618  r += 16 */\n      dup2\n      tag_25\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_25:\n      swap1\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":556:630  if (x >= 2 ** 16){... */\n    tag_24:\n        /* \"tests/MostSignificantBit-us.sol\":671:677  2 ** 8 */\n      0x0100\n        /* \"tests/MostSignificantBit-us.sol\":668:669  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":668:677  x>=2 ** 8 */\n      lt\n        /* \"tests/MostSignificantBit-us.sol\":664:732  if (x>=2 ** 8){... */\n      tag_26\n      jumpi\n        /* \"tests/MostSignificantBit-us.sol\":699:700  8 */\n      0x08\n        /* \"tests/MostSignificantBit-us.sol\":693:700  x >>= 8 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":719:720  8 */\n      0x08\n        /* \"tests/MostSignificantBit-us.sol\":715:720  r +=8 */\n      dup2\n      tag_27\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_27:\n      swap1\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":664:732  if (x>=2 ** 8){... */\n    tag_26:\n        /* \"tests/MostSignificantBit-us.sol\":770:776  2 ** 4 */\n      0x10\n        /* \"tests/MostSignificantBit-us.sol\":765:766  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":765:776  x >= 2 ** 4 */\n      lt\n        /* \"tests/MostSignificantBit-us.sol\":761:832  if (x >= 2 ** 4){... */\n      tag_28\n      jumpi\n        /* \"tests/MostSignificantBit-us.sol\":798:799  4 */\n      0x04\n        /* \"tests/MostSignificantBit-us.sol\":792:799  x >>= 4 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":819:820  4 */\n      0x04\n        /* \"tests/MostSignificantBit-us.sol\":814:820  r += 4 */\n      dup2\n      tag_29\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_29:\n      swap1\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":761:832  if (x >= 2 ** 4){... */\n    tag_28:\n        /* \"tests/MostSignificantBit-us.sol\":875:881  2 ** 2 */\n      0x04\n        /* \"tests/MostSignificantBit-us.sol\":870:871  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":870:881  x >= 2 ** 2 */\n      lt\n        /* \"tests/MostSignificantBit-us.sol\":866:938  if (x >= 2 ** 2){... */\n      tag_30\n      jumpi\n        /* \"tests/MostSignificantBit-us.sol\":903:904  2 */\n      0x02\n        /* \"tests/MostSignificantBit-us.sol\":897:904  x >>= 2 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":925:926  2 */\n      0x02\n        /* \"tests/MostSignificantBit-us.sol\":919:926  r +=  2 */\n      dup2\n      tag_31\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_31:\n      swap1\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":866:938  if (x >= 2 ** 2){... */\n    tag_30:\n        /* \"tests/MostSignificantBit-us.sol\":980:986  2 ** 1 */\n      0x02\n        /* \"tests/MostSignificantBit-us.sol\":975:976  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":975:986  x >= 2 ** 1 */\n      lt\n        /* \"tests/MostSignificantBit-us.sol\":971:1021  if (x >= 2 ** 1){... */\n      tag_32\n      jumpi\n        /* \"tests/MostSignificantBit-us.sol\":1008:1009  1 */\n      0x01\n        /* \"tests/MostSignificantBit-us.sol\":1002:1009  r +=  1 */\n      dup2\n      tag_33\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_33:\n      swap1\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":971:1021  if (x >= 2 ** 1){... */\n    tag_32:\n        /* \"tests/MostSignificantBit-us.sol\":116:1028  function findMostSignificantBit(uint256 x) external pure returns(uint8 r){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"tests/MostSignificantBit-us.sol\":1083:2540  function mostSignificantBit(uint256 x) public pure returns(uint256 r) {... */\n    tag_13:\n        /* \"tests/MostSignificantBit-us.sol\":1142:1151  uint256 r */\n      0x00\n        /* \"tests/MostSignificantBit-us.sol\":1488:1522  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF */\n      0xffffffffffffffffffffffffffffffff\n        /* \"tests/MostSignificantBit-us.sol\":1485:1486  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":1482:1523  gt(x, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF) */\n      gt\n        /* \"tests/MostSignificantBit-us.sol\":1479:1480  7 */\n      0x07\n        /* \"tests/MostSignificantBit-us.sol\":1475:1524  shl(7, gt(x, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)) */\n      shl\n        /* \"tests/MostSignificantBit-us.sol\":1550:1551  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":1547:1548  f */\n      dup2\n        /* \"tests/MostSignificantBit-us.sol\":1543:1552  shr(f, x) */\n      shr\n        /* \"tests/MostSignificantBit-us.sol\":1538:1552  x := shr(f, x) */\n      swap3\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":1621:1622  f */\n      dup1\n        /* \"tests/MostSignificantBit-us.sol\":1618:1619  r */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":1615:1623  or(r, f) */\n      or\n        /* \"tests/MostSignificantBit-us.sol\":1610:1623  r := or(r, f) */\n      swap2\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":1451:1634  {... */\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":1692:1710  0xFFFFFFFFFFFFFFFF */\n      0xffffffffffffffff\n        /* \"tests/MostSignificantBit-us.sol\":1689:1690  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":1686:1711  gt(x, 0xFFFFFFFFFFFFFFFF) */\n      gt\n        /* \"tests/MostSignificantBit-us.sol\":1683:1684  6 */\n      0x06\n        /* \"tests/MostSignificantBit-us.sol\":1679:1712  shl(6, gt(x, 0xFFFFFFFFFFFFFFFF)) */\n      shl\n        /* \"tests/MostSignificantBit-us.sol\":1738:1739  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":1735:1736  f */\n      dup2\n        /* \"tests/MostSignificantBit-us.sol\":1731:1740  shr(f, x) */\n      shr\n        /* \"tests/MostSignificantBit-us.sol\":1726:1740  x := shr(f, x) */\n      swap3\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":1765:1766  f */\n      dup1\n        /* \"tests/MostSignificantBit-us.sol\":1762:1763  r */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":1759:1767  or(r, f) */\n      or\n        /* \"tests/MostSignificantBit-us.sol\":1754:1767  r := or(r, f) */\n      swap2\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":1655:1778  {... */\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":1838:1848  0xFFFFFFFF */\n      0xffffffff\n        /* \"tests/MostSignificantBit-us.sol\":1835:1836  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":1832:1849  gt(x, 0xFFFFFFFF) */\n      gt\n        /* \"tests/MostSignificantBit-us.sol\":1829:1830  5 */\n      0x05\n        /* \"tests/MostSignificantBit-us.sol\":1825:1850  shl(5, gt(x, 0xFFFFFFFF)) */\n      shl\n        /* \"tests/MostSignificantBit-us.sol\":1876:1877  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":1873:1874  f */\n      dup2\n        /* \"tests/MostSignificantBit-us.sol\":1869:1878  shr(f, x) */\n      shr\n        /* \"tests/MostSignificantBit-us.sol\":1864:1878  x := shr(f, x) */\n      swap3\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":1903:1904  f */\n      dup1\n        /* \"tests/MostSignificantBit-us.sol\":1900:1901  r */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":1897:1905  or(r, f) */\n      or\n        /* \"tests/MostSignificantBit-us.sol\":1892:1905  r := or(r, f) */\n      swap2\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":1801:1916  {... */\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":1974:1980  0xFFFF */\n      0xffff\n        /* \"tests/MostSignificantBit-us.sol\":1971:1972  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":1968:1981  gt(x, 0xFFFF) */\n      gt\n        /* \"tests/MostSignificantBit-us.sol\":1965:1966  4 */\n      0x04\n        /* \"tests/MostSignificantBit-us.sol\":1961:1982  shl(4, gt(x, 0xFFFF)) */\n      shl\n        /* \"tests/MostSignificantBit-us.sol\":2008:2009  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":2005:2006  f */\n      dup2\n        /* \"tests/MostSignificantBit-us.sol\":2001:2010  shr(f, x) */\n      shr\n        /* \"tests/MostSignificantBit-us.sol\":1996:2010  x := shr(f, x) */\n      swap3\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":2035:2036  f */\n      dup1\n        /* \"tests/MostSignificantBit-us.sol\":2032:2033  r */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":2029:2037  or(r, f) */\n      or\n        /* \"tests/MostSignificantBit-us.sol\":2024:2037  r := or(r, f) */\n      swap2\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":1937:2048  {... */\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":2106:2110  0xFF */\n      0xff\n        /* \"tests/MostSignificantBit-us.sol\":2103:2104  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":2100:2111  gt(x, 0xFF) */\n      gt\n        /* \"tests/MostSignificantBit-us.sol\":2097:2098  3 */\n      0x03\n        /* \"tests/MostSignificantBit-us.sol\":2093:2112  shl(3, gt(x, 0xFF)) */\n      shl\n        /* \"tests/MostSignificantBit-us.sol\":2138:2139  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":2135:2136  f */\n      dup2\n        /* \"tests/MostSignificantBit-us.sol\":2131:2140  shr(f, x) */\n      shr\n        /* \"tests/MostSignificantBit-us.sol\":2126:2140  x := shr(f, x) */\n      swap3\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":2165:2166  f */\n      dup1\n        /* \"tests/MostSignificantBit-us.sol\":2162:2163  r */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":2159:2167  or(r, f) */\n      or\n        /* \"tests/MostSignificantBit-us.sol\":2154:2167  r := or(r, f) */\n      swap2\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":2069:2178  {... */\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":2238:2241  0xF */\n      0x0f\n        /* \"tests/MostSignificantBit-us.sol\":2235:2236  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":2232:2242  gt(x, 0xF) */\n      gt\n        /* \"tests/MostSignificantBit-us.sol\":2229:2230  2 */\n      0x02\n        /* \"tests/MostSignificantBit-us.sol\":2225:2243  shl(2, gt(x, 0xF)) */\n      shl\n        /* \"tests/MostSignificantBit-us.sol\":2269:2270  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":2266:2267  f */\n      dup2\n        /* \"tests/MostSignificantBit-us.sol\":2262:2271  shr(f, x) */\n      shr\n        /* \"tests/MostSignificantBit-us.sol\":2257:2271  x := shr(f, x) */\n      swap3\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":2296:2297  f */\n      dup1\n        /* \"tests/MostSignificantBit-us.sol\":2293:2294  r */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":2290:2298  or(r, f) */\n      or\n        /* \"tests/MostSignificantBit-us.sol\":2285:2298  r := or(r, f) */\n      swap2\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":2201:2309  {... */\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":2367:2370  0x3 */\n      0x03\n        /* \"tests/MostSignificantBit-us.sol\":2364:2365  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":2361:2371  gt(x, 0x3) */\n      gt\n        /* \"tests/MostSignificantBit-us.sol\":2358:2359  1 */\n      0x01\n        /* \"tests/MostSignificantBit-us.sol\":2354:2372  shl(1, gt(x, 0x3)) */\n      shl\n        /* \"tests/MostSignificantBit-us.sol\":2398:2399  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":2395:2396  f */\n      dup2\n        /* \"tests/MostSignificantBit-us.sol\":2391:2400  shr(f, x) */\n      shr\n        /* \"tests/MostSignificantBit-us.sol\":2386:2400  x := shr(f, x) */\n      swap3\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":2425:2426  f */\n      dup1\n        /* \"tests/MostSignificantBit-us.sol\":2422:2423  r */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":2419:2427  or(r, f) */\n      or\n        /* \"tests/MostSignificantBit-us.sol\":2414:2427  r := or(r, f) */\n      swap2\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":2330:2438  {... */\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":2489:2492  0x1 */\n      0x01\n        /* \"tests/MostSignificantBit-us.sol\":2486:2487  x */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":2483:2493  gt(x, 0x1) */\n      gt\n        /* \"tests/MostSignificantBit-us.sol\":2518:2519  f */\n      dup1\n        /* \"tests/MostSignificantBit-us.sol\":2515:2516  r */\n      dup3\n        /* \"tests/MostSignificantBit-us.sol\":2512:2520  or(r, f) */\n      or\n        /* \"tests/MostSignificantBit-us.sol\":2507:2520  r := or(r, f) */\n      swap2\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":2459:2531  {... */\n      pop\n        /* \"tests/MostSignificantBit-us.sol\":1083:2540  function mostSignificantBit(uint256 x) public pure returns(uint256 r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_36:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_38:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_39:\n        /* \"#utility.yul\":490:514   */\n      tag_51\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_38\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_52\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_52:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_40:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_54\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_39\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_7:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_57\n      tag_36\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":766:885   */\n    tag_56:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_58\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_40\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1111   */\n    tag_41:\n        /* \"#utility.yul\":1060:1067   */\n      0x00\n        /* \"#utility.yul\":1100:1104   */\n      0xff\n        /* \"#utility.yul\":1093:1098   */\n      dup3\n        /* \"#utility.yul\":1089:1105   */\n      and\n        /* \"#utility.yul\":1078:1105   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1117:1229   */\n    tag_42:\n        /* \"#utility.yul\":1200:1222   */\n      tag_61\n        /* \"#utility.yul\":1216:1221   */\n      dup2\n        /* \"#utility.yul\":1200:1222   */\n      tag_41\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1195:1198   */\n      dup3\n        /* \"#utility.yul\":1188:1223   */\n      mstore\n        /* \"#utility.yul\":1117:1229   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1235:1449   */\n    tag_10:\n        /* \"#utility.yul\":1324:1328   */\n      0x00\n        /* \"#utility.yul\":1362:1364   */\n      0x20\n        /* \"#utility.yul\":1351:1360   */\n      dup3\n        /* \"#utility.yul\":1347:1365   */\n      add\n        /* \"#utility.yul\":1339:1365   */\n      swap1\n      pop\n        /* \"#utility.yul\":1375:1442   */\n      tag_63\n        /* \"#utility.yul\":1439:1440   */\n      0x00\n        /* \"#utility.yul\":1428:1437   */\n      dup4\n        /* \"#utility.yul\":1424:1441   */\n      add\n        /* \"#utility.yul\":1415:1421   */\n      dup5\n        /* \"#utility.yul\":1375:1442   */\n      tag_42\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1235:1449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1455:1573   */\n    tag_43:\n        /* \"#utility.yul\":1542:1566   */\n      tag_65\n        /* \"#utility.yul\":1560:1565   */\n      dup2\n        /* \"#utility.yul\":1542:1566   */\n      tag_38\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1537:1540   */\n      dup3\n        /* \"#utility.yul\":1530:1567   */\n      mstore\n        /* \"#utility.yul\":1455:1573   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1579:1801   */\n    tag_15:\n        /* \"#utility.yul\":1672:1676   */\n      0x00\n        /* \"#utility.yul\":1710:1712   */\n      0x20\n        /* \"#utility.yul\":1699:1708   */\n      dup3\n        /* \"#utility.yul\":1695:1713   */\n      add\n        /* \"#utility.yul\":1687:1713   */\n      swap1\n      pop\n        /* \"#utility.yul\":1723:1794   */\n      tag_67\n        /* \"#utility.yul\":1791:1792   */\n      0x00\n        /* \"#utility.yul\":1780:1789   */\n      dup4\n        /* \"#utility.yul\":1776:1793   */\n      add\n        /* \"#utility.yul\":1767:1773   */\n      dup5\n        /* \"#utility.yul\":1723:1794   */\n      tag_43\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1579:1801   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1807:1987   */\n    tag_44:\n        /* \"#utility.yul\":1855:1932   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1852:1853   */\n      0x00\n        /* \"#utility.yul\":1845:1933   */\n      mstore\n        /* \"#utility.yul\":1952:1956   */\n      0x11\n        /* \"#utility.yul\":1949:1950   */\n      0x04\n        /* \"#utility.yul\":1942:1957   */\n      mstore\n        /* \"#utility.yul\":1976:1980   */\n      0x24\n        /* \"#utility.yul\":1973:1974   */\n      0x00\n        /* \"#utility.yul\":1966:1981   */\n      revert\n        /* \"#utility.yul\":1993:2181   */\n    tag_19:\n        /* \"#utility.yul\":2031:2034   */\n      0x00\n        /* \"#utility.yul\":2050:2068   */\n      tag_70\n        /* \"#utility.yul\":2066:2067   */\n      dup3\n        /* \"#utility.yul\":2050:2068   */\n      tag_41\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2045:2068   */\n      swap2\n      pop\n        /* \"#utility.yul\":2082:2100   */\n      tag_71\n        /* \"#utility.yul\":2098:2099   */\n      dup4\n        /* \"#utility.yul\":2082:2100   */\n      tag_41\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2077:2100   */\n      swap3\n      pop\n        /* \"#utility.yul\":2123:2124   */\n      dup3\n        /* \"#utility.yul\":2120:2121   */\n      dup3\n        /* \"#utility.yul\":2116:2125   */\n      add\n        /* \"#utility.yul\":2109:2125   */\n      swap1\n      pop\n        /* \"#utility.yul\":2146:2150   */\n      0xff\n        /* \"#utility.yul\":2141:2144   */\n      dup2\n        /* \"#utility.yul\":2138:2151   */\n      gt\n        /* \"#utility.yul\":2135:2174   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":2154:2172   */\n      tag_73\n      tag_44\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2135:2174   */\n    tag_72:\n        /* \"#utility.yul\":1993:2181   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208d2d5ff7a4d00d460ccbf5020c46211e44cd442463d879f8f0901569570019eb64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506103ab8061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c8063483d868d14610038578063e6bcbc6514610068575b5f80fd5b610052600480360381019061004d919061028d565b610098565b60405161005f91906102d3565b60405180910390f35b610082600480360381019061007d919061028d565b6101ae565b60405161008f91906102fb565b60405180910390f35b5f70010000000000000000000000000000000082106100c857608082901c91506080816100c59190610341565b90505b6801000000000000000082106100ef57604082901c91506040816100ec9190610341565b90505b640100000000821061011257602082901c915060208161010f9190610341565b90505b62010000821061013357601082901c91506010816101309190610341565b90505b610100821061015357600882901c91506008816101509190610341565b90505b6010821061017257600482901c915060048161016f9190610341565b90505b6004821061019157600282901c915060028161018e9190610341565b90505b600282106101a9576001816101a69190610341565b90505b919050565b5f6fffffffffffffffffffffffffffffffff821160071b82811c925080821791505067ffffffffffffffff821160061b82811c925080821791505063ffffffff821160051b82811c925080821791505061ffff821160041b82811c925080821791505060ff821160031b82811c9250808217915050600f821160021b82811c92508082179150506003821160011b82811c925080821791505060018211808217915050919050565b5f80fd5b5f819050919050565b61026c8161025a565b8114610276575f80fd5b50565b5f8135905061028781610263565b92915050565b5f602082840312156102a2576102a1610256565b5b5f6102af84828501610279565b91505092915050565b5f60ff82169050919050565b6102cd816102b8565b82525050565b5f6020820190506102e65f8301846102c4565b92915050565b6102f58161025a565b82525050565b5f60208201905061030e5f8301846102ec565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61034b826102b8565b9150610356836102b8565b9250828201905060ff81111561036f5761036e610314565b5b9291505056fea26469706673582212208d2d5ff7a4d00d460ccbf5020c46211e44cd442463d879f8f0901569570019eb64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AB DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x483D868D EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xE6BCBC65 EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x28D JUMP JUMPDEST PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F SWAP2 SWAP1 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x28D JUMP JUMPDEST PUSH2 0x1AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH17 0x100000000000000000000000000000000 DUP3 LT PUSH2 0xC8 JUMPI PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x80 DUP2 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0xEF JUMPI PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x40 DUP2 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x112 JUMPI PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x20 DUP2 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x133 JUMPI PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x10 DUP2 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x153 JUMPI PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x8 DUP2 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x172 JUMPI PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x4 DUP2 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x191 JUMPI PUSH1 0x2 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x2 DUP2 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x1A9 JUMPI PUSH1 0x1 DUP2 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT PUSH1 0x7 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH1 0x6 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH4 0xFFFFFFFF DUP3 GT PUSH1 0x5 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH2 0xFFFF DUP3 GT PUSH1 0x4 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH1 0xFF DUP3 GT PUSH1 0x3 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH1 0xF DUP3 GT PUSH1 0x2 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH1 0x3 DUP3 GT PUSH1 0x1 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH1 0x1 DUP3 GT DUP1 DUP3 OR SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26C DUP2 PUSH2 0x25A JUMP JUMPDEST DUP2 EQ PUSH2 0x276 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x287 DUP2 PUSH2 0x263 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A2 JUMPI PUSH2 0x2A1 PUSH2 0x256 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2AF DUP5 DUP3 DUP6 ADD PUSH2 0x279 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CD DUP2 PUSH2 0x2B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E6 PUSH0 DUP4 ADD DUP5 PUSH2 0x2C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F5 DUP2 PUSH2 0x25A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30E PUSH0 DUP4 ADD DUP5 PUSH2 0x2EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x34B DUP3 PUSH2 0x2B8 JUMP JUMPDEST SWAP2 POP PUSH2 0x356 DUP4 PUSH2 0x2B8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x36F JUMPI PUSH2 0x36E PUSH2 0x314 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0x2D PUSH0 0xF7 LOG4 0xD0 0xD CHAINID 0xC 0xCB CREATE2 MUL 0xC CHAINID 0x21 0x1E PREVRANDAO 0xCD PREVRANDAO 0x24 PUSH4 0xD879F8F0 SWAP1 ISZERO PUSH10 0x570019EB64736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "60:2485:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@findMostSignificantBit_125": {
									"entryPoint": 152,
									"id": 125,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mostSignificantBit_141": {
									"entryPoint": 430,
									"id": 141,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint8": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2184:1",
										"nodeType": "YulBlock",
										"src": "0:2184:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:32:1",
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nativeSrc": "389:16:1",
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:1",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nativeSrc": "460:79:1",
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:1",
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nativeSrc": "519:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nativeSrc": "519:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nativeSrc": "490:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nativeSrc": "480:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nativeSrc": "473:43:1",
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nativeSrc": "470:63:1",
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:1",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nativeSrc": "597:87:1",
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nativeSrc": "607:29:1",
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nativeSrc": "616:20:1",
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nativeSrc": "645:33:1",
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nativeSrc": "645:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:1",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:1",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:1",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nativeSrc": "756:263:1",
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:1",
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nativeSrc": "804:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nativeSrc": "804:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nativeSrc": "773:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:1",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nativeSrc": "769:32:1",
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nativeSrc": "766:119:1",
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nativeSrc": "895:117:1",
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nativeSrc": "910:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:1",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:1",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:1",
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nativeSrc": "970:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nativeSrc": "949:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:1",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:1",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:1",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nativeSrc": "1068:43:1",
													"nodeType": "YulBlock",
													"src": "1068:43:1",
													"statements": [
														{
															"nativeSrc": "1078:27:1",
															"nodeType": "YulAssignment",
															"src": "1078:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1093:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1093:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1100:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1100:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1089:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1089:3:1"
																},
																"nativeSrc": "1089:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1089:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1078:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1078:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "1025:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1050:5:1",
														"nodeType": "YulTypedName",
														"src": "1050:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1060:7:1",
														"nodeType": "YulTypedName",
														"src": "1060:7:1",
														"type": ""
													}
												],
												"src": "1025:86:1"
											},
											{
												"body": {
													"nativeSrc": "1178:51:1",
													"nodeType": "YulBlock",
													"src": "1178:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1195:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1195:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1216:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1216:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "1200:15:1",
																			"nodeType": "YulIdentifier",
																			"src": "1200:15:1"
																		},
																		"nativeSrc": "1200:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1200:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1188:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1188:6:1"
																},
																"nativeSrc": "1188:35:1",
																"nodeType": "YulFunctionCall",
																"src": "1188:35:1"
															},
															"nativeSrc": "1188:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "1188:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "1117:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1166:5:1",
														"nodeType": "YulTypedName",
														"src": "1166:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1173:3:1",
														"nodeType": "YulTypedName",
														"src": "1173:3:1",
														"type": ""
													}
												],
												"src": "1117:112:1"
											},
											{
												"body": {
													"nativeSrc": "1329:120:1",
													"nodeType": "YulBlock",
													"src": "1329:120:1",
													"statements": [
														{
															"nativeSrc": "1339:26:1",
															"nodeType": "YulAssignment",
															"src": "1339:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1351:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1351:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1362:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1362:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1347:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1347:3:1"
																},
																"nativeSrc": "1347:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1347:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1339:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1339:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1415:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1415:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1439:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1439:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1424:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1424:3:1"
																		},
																		"nativeSrc": "1424:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1424:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "1375:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "1375:39:1"
																},
																"nativeSrc": "1375:67:1",
																"nodeType": "YulFunctionCall",
																"src": "1375:67:1"
															},
															"nativeSrc": "1375:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "1375:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1235:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1301:9:1",
														"nodeType": "YulTypedName",
														"src": "1301:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1313:6:1",
														"nodeType": "YulTypedName",
														"src": "1313:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1324:4:1",
														"nodeType": "YulTypedName",
														"src": "1324:4:1",
														"type": ""
													}
												],
												"src": "1235:214:1"
											},
											{
												"body": {
													"nativeSrc": "1520:53:1",
													"nodeType": "YulBlock",
													"src": "1520:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1537:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1537:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1560:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1560:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1542:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1542:17:1"
																		},
																		"nativeSrc": "1542:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1542:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1530:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1530:6:1"
																},
																"nativeSrc": "1530:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1530:37:1"
															},
															"nativeSrc": "1530:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1530:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1455:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1508:5:1",
														"nodeType": "YulTypedName",
														"src": "1508:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1515:3:1",
														"nodeType": "YulTypedName",
														"src": "1515:3:1",
														"type": ""
													}
												],
												"src": "1455:118:1"
											},
											{
												"body": {
													"nativeSrc": "1677:124:1",
													"nodeType": "YulBlock",
													"src": "1677:124:1",
													"statements": [
														{
															"nativeSrc": "1687:26:1",
															"nodeType": "YulAssignment",
															"src": "1687:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1699:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1699:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1710:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1710:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1695:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1695:3:1"
																},
																"nativeSrc": "1695:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1695:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1687:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1687:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1767:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1767:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1780:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1780:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1791:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1791:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1776:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1776:3:1"
																		},
																		"nativeSrc": "1776:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1776:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1723:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1723:43:1"
																},
																"nativeSrc": "1723:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1723:71:1"
															},
															"nativeSrc": "1723:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1723:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1579:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1649:9:1",
														"nodeType": "YulTypedName",
														"src": "1649:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1661:6:1",
														"nodeType": "YulTypedName",
														"src": "1661:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1672:4:1",
														"nodeType": "YulTypedName",
														"src": "1672:4:1",
														"type": ""
													}
												],
												"src": "1579:222:1"
											},
											{
												"body": {
													"nativeSrc": "1835:152:1",
													"nodeType": "YulBlock",
													"src": "1835:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1852:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1852:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1855:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1855:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1845:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1845:6:1"
																},
																"nativeSrc": "1845:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1845:88:1"
															},
															"nativeSrc": "1845:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1845:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1949:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1949:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1952:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1952:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1942:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1942:6:1"
																},
																"nativeSrc": "1942:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1942:15:1"
															},
															"nativeSrc": "1942:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1942:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1973:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1973:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1976:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1976:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1966:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:1"
																},
																"nativeSrc": "1966:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1966:15:1"
															},
															"nativeSrc": "1966:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1966:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1807:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1807:180:1"
											},
											{
												"body": {
													"nativeSrc": "2035:146:1",
													"nodeType": "YulBlock",
													"src": "2035:146:1",
													"statements": [
														{
															"nativeSrc": "2045:23:1",
															"nodeType": "YulAssignment",
															"src": "2045:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2066:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2066:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "2050:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "2050:15:1"
																},
																"nativeSrc": "2050:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2050:18:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2045:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "2045:1:1"
																}
															]
														},
														{
															"nativeSrc": "2077:23:1",
															"nodeType": "YulAssignment",
															"src": "2077:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2098:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2098:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "2082:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "2082:15:1"
																},
																"nativeSrc": "2082:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2082:18:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2077:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "2077:1:1"
																}
															]
														},
														{
															"nativeSrc": "2109:16:1",
															"nodeType": "YulAssignment",
															"src": "2109:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2120:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2120:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2123:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2123:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2116:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2116:3:1"
																},
																"nativeSrc": "2116:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2116:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2109:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2109:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2152:22:1",
																"nodeType": "YulBlock",
																"src": "2152:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2154:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2154:16:1"
																			},
																			"nativeSrc": "2154:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2154:18:1"
																		},
																		"nativeSrc": "2154:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2154:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "2141:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2146:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2146:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2138:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2138:2:1"
																},
																"nativeSrc": "2138:13:1",
																"nodeType": "YulFunctionCall",
																"src": "2138:13:1"
															},
															"nativeSrc": "2135:39:1",
															"nodeType": "YulIf",
															"src": "2135:39:1"
														}
													]
												},
												"name": "checked_add_t_uint8",
												"nativeSrc": "1993:188:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2022:1:1",
														"nodeType": "YulTypedName",
														"src": "2022:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2025:1:1",
														"nodeType": "YulTypedName",
														"src": "2025:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2031:3:1",
														"nodeType": "YulTypedName",
														"src": "2031:3:1",
														"type": ""
													}
												],
												"src": "1993:188:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint8(x, y) -> sum {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xff) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c8063483d868d14610038578063e6bcbc6514610068575b5f80fd5b610052600480360381019061004d919061028d565b610098565b60405161005f91906102d3565b60405180910390f35b610082600480360381019061007d919061028d565b6101ae565b60405161008f91906102fb565b60405180910390f35b5f70010000000000000000000000000000000082106100c857608082901c91506080816100c59190610341565b90505b6801000000000000000082106100ef57604082901c91506040816100ec9190610341565b90505b640100000000821061011257602082901c915060208161010f9190610341565b90505b62010000821061013357601082901c91506010816101309190610341565b90505b610100821061015357600882901c91506008816101509190610341565b90505b6010821061017257600482901c915060048161016f9190610341565b90505b6004821061019157600282901c915060028161018e9190610341565b90505b600282106101a9576001816101a69190610341565b90505b919050565b5f6fffffffffffffffffffffffffffffffff821160071b82811c925080821791505067ffffffffffffffff821160061b82811c925080821791505063ffffffff821160051b82811c925080821791505061ffff821160041b82811c925080821791505060ff821160031b82811c9250808217915050600f821160021b82811c92508082179150506003821160011b82811c925080821791505060018211808217915050919050565b5f80fd5b5f819050919050565b61026c8161025a565b8114610276575f80fd5b50565b5f8135905061028781610263565b92915050565b5f602082840312156102a2576102a1610256565b5b5f6102af84828501610279565b91505092915050565b5f60ff82169050919050565b6102cd816102b8565b82525050565b5f6020820190506102e65f8301846102c4565b92915050565b6102f58161025a565b82525050565b5f60208201905061030e5f8301846102ec565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61034b826102b8565b9150610356836102b8565b9250828201905060ff81111561036f5761036e610314565b5b9291505056fea26469706673582212208d2d5ff7a4d00d460ccbf5020c46211e44cd442463d879f8f0901569570019eb64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x483D868D EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xE6BCBC65 EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x28D JUMP JUMPDEST PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F SWAP2 SWAP1 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x28D JUMP JUMPDEST PUSH2 0x1AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH17 0x100000000000000000000000000000000 DUP3 LT PUSH2 0xC8 JUMPI PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x80 DUP2 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0xEF JUMPI PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x40 DUP2 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x112 JUMPI PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x20 DUP2 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x133 JUMPI PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x10 DUP2 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x153 JUMPI PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x8 DUP2 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x172 JUMPI PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x4 DUP2 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x191 JUMPI PUSH1 0x2 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x2 DUP2 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x1A9 JUMPI PUSH1 0x1 DUP2 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT PUSH1 0x7 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH1 0x6 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH4 0xFFFFFFFF DUP3 GT PUSH1 0x5 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH2 0xFFFF DUP3 GT PUSH1 0x4 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH1 0xFF DUP3 GT PUSH1 0x3 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH1 0xF DUP3 GT PUSH1 0x2 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH1 0x3 DUP3 GT PUSH1 0x1 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH1 0x1 DUP3 GT DUP1 DUP3 OR SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26C DUP2 PUSH2 0x25A JUMP JUMPDEST DUP2 EQ PUSH2 0x276 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x287 DUP2 PUSH2 0x263 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A2 JUMPI PUSH2 0x2A1 PUSH2 0x256 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2AF DUP5 DUP3 DUP6 ADD PUSH2 0x279 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CD DUP2 PUSH2 0x2B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E6 PUSH0 DUP4 ADD DUP5 PUSH2 0x2C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F5 DUP2 PUSH2 0x25A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30E PUSH0 DUP4 ADD DUP5 PUSH2 0x2EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x34B DUP3 PUSH2 0x2B8 JUMP JUMPDEST SWAP2 POP PUSH2 0x356 DUP4 PUSH2 0x2B8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x36F JUMPI PUSH2 0x36E PUSH2 0x314 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0x2D PUSH0 0xF7 LOG4 0xD0 0xD CHAINID 0xC 0xCB CREATE2 MUL 0xC CHAINID 0x21 0x1E PREVRANDAO 0xCD PREVRANDAO 0x24 PUSH4 0xD879F8F0 SWAP1 ISZERO PUSH10 0x570019EB64736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "60:2485:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;116:912;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1083:1457;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;116:912;181:7;236:8;231:1;:13;226:77;;265:3;260:8;;;;;288:3;283:8;;;;;:::i;:::-;;;226:77;347:7;342:1;:12;338:74;;376:2;370:8;;;;;398:2;393:7;;;;;:::i;:::-;;;338:74;456:7;451:1;:12;447:74;;485:2;479:8;;;;;507:2;502:7;;;;;:::i;:::-;;;447:74;565:7;560:1;:12;556:74;;594:2;588:8;;;;;616:2;611:7;;;;;:::i;:::-;;;556:74;671:6;668:1;:9;664:68;;699:1;693:7;;;;;719:1;715:5;;;;;:::i;:::-;;;664:68;770:6;765:1;:11;761:71;;798:1;792:7;;;;;819:1;814:6;;;;;:::i;:::-;;;761:71;875:6;870:1;:11;866:72;;903:1;897:7;;;;;925:1;919:7;;;;;:::i;:::-;;;866:72;980:6;975:1;:11;971:50;;1008:1;1002:7;;;;;:::i;:::-;;;971:50;116:912;;;:::o;1083:1457::-;1142:9;1488:34;1485:1;1482:41;1479:1;1475:49;1550:1;1547;1543:9;1538:14;;1621:1;1618;1615:8;1610:13;;1451:183;1692:18;1689:1;1686:25;1683:1;1679:33;1738:1;1735;1731:9;1726:14;;1765:1;1762;1759:8;1754:13;;1655:123;1838:10;1835:1;1832:17;1829:1;1825:25;1876:1;1873;1869:9;1864:14;;1903:1;1900;1897:8;1892:13;;1801:115;1974:6;1971:1;1968:13;1965:1;1961:21;2008:1;2005;2001:9;1996:14;;2035:1;2032;2029:8;2024:13;;1937:111;2106:4;2103:1;2100:11;2097:1;2093:19;2138:1;2135;2131:9;2126:14;;2165:1;2162;2159:8;2154:13;;2069:109;2238:3;2235:1;2232:10;2229:1;2225:18;2269:1;2266;2262:9;2257:14;;2296:1;2293;2290:8;2285:13;;2201:108;2367:3;2364:1;2361:10;2358:1;2354:18;2398:1;2395;2391:9;2386:14;;2425:1;2422;2419:8;2414:13;;2330:108;2489:3;2486:1;2483:10;2518:1;2515;2512:8;2507:13;;2459:72;1083:1457;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:86::-;1060:7;1100:4;1093:5;1089:16;1078:27;;1025:86;;;:::o;1117:112::-;1200:22;1216:5;1200:22;:::i;:::-;1195:3;1188:35;1117:112;;:::o;1235:214::-;1324:4;1362:2;1351:9;1347:18;1339:26;;1375:67;1439:1;1428:9;1424:17;1415:6;1375:67;:::i;:::-;1235:214;;;;:::o;1455:118::-;1542:24;1560:5;1542:24;:::i;:::-;1537:3;1530:37;1455:118;;:::o;1579:222::-;1672:4;1710:2;1699:9;1695:18;1687:26;;1723:71;1791:1;1780:9;1776:17;1767:6;1723:71;:::i;:::-;1579:222;;;;:::o;1807:180::-;1855:77;1852:1;1845:88;1952:4;1949:1;1942:15;1976:4;1973:1;1966:15;1993:188;2031:3;2050:18;2066:1;2050:18;:::i;:::-;2045:23;;2082:18;2098:1;2082:18;:::i;:::-;2077:23;;2123:1;2120;2116:9;2109:16;;2146:4;2141:3;2138:13;2135:39;;;2154:18;;:::i;:::-;2135:39;1993:188;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "187800",
								"executionCost": "230",
								"totalCost": "188030"
							},
							"external": {
								"findMostSignificantBit(uint256)": "infinite",
								"mostSignificantBit(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 2545,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 2545,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 2545,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2545,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2545,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2545,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2545,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 2545,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2545,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 2545,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2545,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2545,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 2545,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2545,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2545,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 2545,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2545,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 2545,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 2545,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2545,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 2545,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208d2d5ff7a4d00d460ccbf5020c46211e44cd442463d879f8f0901569570019eb64736f6c63430008180033",
									".code": [
										{
											"begin": 60,
											"end": 2545,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "PUSH",
											"source": 0,
											"value": "483D868D"
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "PUSH",
											"source": 0,
											"value": "E6BCBC65"
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2545,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 116,
											"end": 1028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 116,
											"end": 1028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 116,
											"end": 1028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1083,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1083,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1083,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 181,
											"end": 188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 231,
											"end": 232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 231,
											"end": 244,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 226,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 226,
											"end": 303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 265,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 260,
											"end": 268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 260,
											"end": 268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 268,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 260,
											"end": 268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 260,
											"end": 268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 288,
											"end": 291,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 283,
											"end": 291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 283,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 283,
											"end": 291,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 283,
											"end": 291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 283,
											"end": 291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 283,
											"end": 291,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 283,
											"end": 291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 283,
											"end": 291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 226,
											"end": 303,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 226,
											"end": 303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 347,
											"end": 354,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000"
										},
										{
											"begin": 342,
											"end": 343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 342,
											"end": 354,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 338,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 338,
											"end": 412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 376,
											"end": 378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 370,
											"end": 378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 370,
											"end": 378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 378,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 370,
											"end": 378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 370,
											"end": 378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 398,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 393,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 393,
											"end": 400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 393,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 393,
											"end": 400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 400,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 393,
											"end": 400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 393,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 338,
											"end": 412,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 338,
											"end": 412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 456,
											"end": 463,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 451,
											"end": 452,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 451,
											"end": 463,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 447,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 447,
											"end": 521,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 485,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 479,
											"end": 487,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 479,
											"end": 487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 487,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 479,
											"end": 487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 479,
											"end": 487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 507,
											"end": 509,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 502,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 502,
											"end": 509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 502,
											"end": 509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 502,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 502,
											"end": 509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 502,
											"end": 509,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 502,
											"end": 509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 502,
											"end": 509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 502,
											"end": 509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 447,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 447,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 565,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 560,
											"end": 561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 560,
											"end": 572,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 556,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 556,
											"end": 630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 594,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 588,
											"end": 596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 588,
											"end": 596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 596,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 588,
											"end": 596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 588,
											"end": 596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 616,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 611,
											"end": 618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 611,
											"end": 618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 611,
											"end": 618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 618,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 611,
											"end": 618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 611,
											"end": 618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 556,
											"end": 630,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 556,
											"end": 630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 671,
											"end": 677,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 668,
											"end": 669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 668,
											"end": 677,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 664,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 664,
											"end": 732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 699,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 693,
											"end": 700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 693,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 693,
											"end": 700,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 693,
											"end": 700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 693,
											"end": 700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 719,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 715,
											"end": 720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 715,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 715,
											"end": 720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 715,
											"end": 720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 715,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 715,
											"end": 720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 715,
											"end": 720,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 715,
											"end": 720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 715,
											"end": 720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 715,
											"end": 720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 664,
											"end": 732,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 664,
											"end": 732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 770,
											"end": 776,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 765,
											"end": 766,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 765,
											"end": 776,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 761,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 761,
											"end": 832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 798,
											"end": 799,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 792,
											"end": 799,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 819,
											"end": 820,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 814,
											"end": 820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 814,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 814,
											"end": 820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 814,
											"end": 820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 814,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 814,
											"end": 820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 814,
											"end": 820,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 814,
											"end": 820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 814,
											"end": 820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 814,
											"end": 820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 761,
											"end": 832,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 761,
											"end": 832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 875,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 870,
											"end": 871,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 870,
											"end": 881,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 866,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 866,
											"end": 938,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 903,
											"end": 904,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 897,
											"end": 904,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 897,
											"end": 904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 897,
											"end": 904,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 897,
											"end": 904,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 897,
											"end": 904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 925,
											"end": 926,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 919,
											"end": 926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 919,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 919,
											"end": 926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 919,
											"end": 926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 919,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 919,
											"end": 926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 919,
											"end": 926,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 919,
											"end": 926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 919,
											"end": 926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 919,
											"end": 926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 866,
											"end": 938,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 866,
											"end": 938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 980,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 975,
											"end": 976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 975,
											"end": 986,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 971,
											"end": 1021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1008,
											"end": 1009,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1002,
											"end": 1009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1002,
											"end": 1009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1002,
											"end": 1009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1009,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1002,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1021,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 971,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1522,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1485,
											"end": 1486,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1523,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1480,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1551,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1547,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1538,
											"end": 1552,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1538,
											"end": 1552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1623,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1689,
											"end": 1690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1686,
											"end": 1711,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1684,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1679,
											"end": 1712,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1731,
											"end": 1740,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1740,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1767,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1655,
											"end": 1778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1838,
											"end": 1848,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1835,
											"end": 1836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1849,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1830,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1825,
											"end": 1850,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1877,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1873,
											"end": 1874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1869,
											"end": 1878,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 1878,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 1878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1897,
											"end": 1905,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 1971,
											"end": 1972,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 1981,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1961,
											"end": 1982,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2009,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2010,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2029,
											"end": 2037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1937,
											"end": 2048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2106,
											"end": 2110,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2103,
											"end": 2104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2111,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2098,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2138,
											"end": 2139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2140,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2140,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2165,
											"end": 2166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 2167,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2241,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 2235,
											"end": 2236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2242,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2230,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2270,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2271,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2294,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2298,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2370,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2364,
											"end": 2365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2371,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2398,
											"end": 2399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2400,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2400,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2425,
											"end": 2426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2419,
											"end": 2427,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2414,
											"end": 2427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2414,
											"end": 2427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2492,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2486,
											"end": 2487,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2483,
											"end": 2493,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2520,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2507,
											"end": 2520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2507,
											"end": 2520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 2540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1111,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1025,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1104,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1093,
											"end": 1098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1105,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1111,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1111,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1229,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1117,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1216,
											"end": 1221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1200,
											"end": 1222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1222,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1200,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1198,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1223,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1449,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1235,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1364,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1360,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1439,
											"end": 1440,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1375,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1442,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1375,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1449,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1573,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1455,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1560,
											"end": 1565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1542,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1566,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1542,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1540,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1801,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1579,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1712,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1699,
											"end": 1708,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1713,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1791,
											"end": 1792,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1773,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1723,
											"end": 1794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1794,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1723,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1801,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1801,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1987,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1807,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1932,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1852,
											"end": 1853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 1956,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1942,
											"end": 1957,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1980,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1973,
											"end": 1974,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1981,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2181,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1993,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2050,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2066,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2050,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2068,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2050,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2045,
											"end": 2068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2045,
											"end": 2068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2098,
											"end": 2099,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2082,
											"end": 2100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2100,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2116,
											"end": 2125,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2150,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2141,
											"end": 2144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2151,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2135,
											"end": 2174,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2154,
											"end": 2172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2174,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2135,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2181,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"tests/MostSignificantBit-us.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"findMostSignificantBit(uint256)": "483d868d",
							"mostSignificantBit(uint256)": "e6bcbc65"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"findMostSignificantBit\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"r\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"mostSignificantBit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"tests/MostSignificantBit-us.sol\":\"MostSignificantBit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"tests/MostSignificantBit-us.sol\":{\"keccak256\":\"0x3f697b12aebeb11afe2f45a35ff7dabb474e0243a887a085964cc45098e463ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b381b6bb0b12ffdb4e8810a1961c61046f24d9f6814bb3cea5b238d9f31cfd0b\",\"dweb:/ipfs/QmWXTTAAgviL251WZF6z6icSJZczHGarGNxxqzjA83D6ze\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"tests/MostSignificantBit-us.sol": {
				"ast": {
					"absolutePath": "tests/MostSignificantBit-us.sol",
					"exportedSymbols": {
						"MostSignificantBit": [
							142
						]
					},
					"id": 143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MostSignificantBit",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 142,
							"linearizedBaseContracts": [
								142
							],
							"name": "MostSignificantBit",
							"nameLocation": "69:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "189:839:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "231:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "236:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "313238",
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "241:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "128"
														},
														"src": "236:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														}
													},
													"src": "231:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 22,
												"nodeType": "IfStatement",
												"src": "226:77:0",
												"trueBody": {
													"id": 21,
													"nodeType": "Block",
													"src": "245:58:0",
													"statements": [
														{
															"expression": {
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 13,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "260:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 14,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "265:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "260:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 16,
															"nodeType": "ExpressionStatement",
															"src": "260:8:0"
														},
														{
															"expression": {
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 17,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "283:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 18,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "288:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "283:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 20,
															"nodeType": "ExpressionStatement",
															"src": "283:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 23,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "342:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_18446744073709551616_by_1",
															"typeString": "int_const 18446744073709551616"
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "347:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3634",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "352:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														},
														"src": "347:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18446744073709551616_by_1",
															"typeString": "int_const 18446744073709551616"
														}
													},
													"src": "342:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 37,
												"nodeType": "IfStatement",
												"src": "338:74:0",
												"trueBody": {
													"id": 36,
													"nodeType": "Block",
													"src": "355:57:0",
													"statements": [
														{
															"expression": {
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 28,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "370:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "376:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "370:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 31,
															"nodeType": "ExpressionStatement",
															"src": "370:8:0"
														},
														{
															"expression": {
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 32,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "393:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 33,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "398:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "393:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 35,
															"nodeType": "ExpressionStatement",
															"src": "393:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 38,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "451:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_4294967296_by_1",
															"typeString": "int_const 4294967296"
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "456:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3332",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "461:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "456:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4294967296_by_1",
															"typeString": "int_const 4294967296"
														}
													},
													"src": "451:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 52,
												"nodeType": "IfStatement",
												"src": "447:74:0",
												"trueBody": {
													"id": 51,
													"nodeType": "Block",
													"src": "464:57:0",
													"statements": [
														{
															"expression": {
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 43,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "479:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 44,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "485:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 46,
															"nodeType": "ExpressionStatement",
															"src": "479:8:0"
														},
														{
															"expression": {
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 47,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "502:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 48,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "507:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "502:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 50,
															"nodeType": "ExpressionStatement",
															"src": "502:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 53,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "560:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_65536_by_1",
															"typeString": "int_const 65536"
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "565:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3136",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "570:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "16"
														},
														"src": "565:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65536_by_1",
															"typeString": "int_const 65536"
														}
													},
													"src": "560:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 67,
												"nodeType": "IfStatement",
												"src": "556:74:0",
												"trueBody": {
													"id": 66,
													"nodeType": "Block",
													"src": "573:57:0",
													"statements": [
														{
															"expression": {
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 58,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "588:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "594:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "588:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 61,
															"nodeType": "ExpressionStatement",
															"src": "588:8:0"
														},
														{
															"expression": {
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 62,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "611:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "616:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "611:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 65,
															"nodeType": "ExpressionStatement",
															"src": "611:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "668:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "671:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "38",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "676:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"src": "671:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														}
													},
													"src": "668:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "664:68:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "678:54:0",
													"statements": [
														{
															"expression": {
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 73,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "693:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 74,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "699:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "693:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 76,
															"nodeType": "ExpressionStatement",
															"src": "693:7:0"
														},
														{
															"expression": {
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 77,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "715:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "719:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "715:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 80,
															"nodeType": "ExpressionStatement",
															"src": "715:5:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 83,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "765:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "770:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "34",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "775:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "770:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														}
													},
													"src": "765:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 97,
												"nodeType": "IfStatement",
												"src": "761:71:0",
												"trueBody": {
													"id": 96,
													"nodeType": "Block",
													"src": "777:55:0",
													"statements": [
														{
															"expression": {
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 88,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "792:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 89,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "798:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "792:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 91,
															"nodeType": "ExpressionStatement",
															"src": "792:7:0"
														},
														{
															"expression": {
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 92,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "814:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "819:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "814:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 95,
															"nodeType": "ExpressionStatement",
															"src": "814:6:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 98,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "870:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "875:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "32",
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "880:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "875:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														}
													},
													"src": "870:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "866:72:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "882:56:0",
													"statements": [
														{
															"expression": {
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 103,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "897:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "903:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "897:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 106,
															"nodeType": "ExpressionStatement",
															"src": "897:7:0"
														},
														{
															"expression": {
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 107,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "919:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "925:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "919:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 110,
															"nodeType": "ExpressionStatement",
															"src": "919:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 113,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "975:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "980:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "31",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "985:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "980:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														}
													},
													"src": "975:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 123,
												"nodeType": "IfStatement",
												"src": "971:50:0",
												"trueBody": {
													"id": 122,
													"nodeType": "Block",
													"src": "987:34:0",
													"statements": [
														{
															"expression": {
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 118,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "1002:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1008:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1002:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 121,
															"nodeType": "ExpressionStatement",
															"src": "1002:7:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "483d868d",
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findMostSignificantBit",
									"nameLocation": "125:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "156:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "148:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "148:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "147:11:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "187:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "181:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 5,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "181:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "180:9:0"
									},
									"scope": 142,
									"src": "116:912:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "1153:1387:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1451:183:0",
													"nodeType": "YulBlock",
													"src": "1451:183:0",
													"statements": [
														{
															"nativeSrc": "1466:58:0",
															"nodeType": "YulVariableDeclaration",
															"src": "1466:58:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1479:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1479:1:0",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "1485:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "1485:1:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1488:34:0",
																				"nodeType": "YulLiteral",
																				"src": "1488:34:0",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1482:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "1482:2:0"
																		},
																		"nativeSrc": "1482:41:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1482:41:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1475:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "1475:3:0"
																},
																"nativeSrc": "1475:49:0",
																"nodeType": "YulFunctionCall",
																"src": "1475:49:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "1470:1:0",
																	"nodeType": "YulTypedName",
																	"src": "1470:1:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1538:14:0",
															"nodeType": "YulAssignment",
															"src": "1538:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "1547:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "1547:1:0"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "1550:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "1550:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1543:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "1543:3:0"
																},
																"nativeSrc": "1543:9:0",
																"nodeType": "YulFunctionCall",
																"src": "1543:9:0"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "1538:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "1538:1:0"
																}
															]
														},
														{
															"nativeSrc": "1610:13:0",
															"nodeType": "YulAssignment",
															"src": "1610:13:0",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "1618:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "1618:1:0"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "1621:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "1621:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1615:2:0",
																	"nodeType": "YulIdentifier",
																	"src": "1615:2:0"
																},
																"nativeSrc": "1615:8:0",
																"nodeType": "YulFunctionCall",
																"src": "1615:8:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "1610:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "1610:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "1610:1:0",
														"valueSize": 1
													},
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "1618:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "1485:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "1538:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "1550:1:0",
														"valueSize": 1
													}
												],
												"id": 132,
												"nodeType": "InlineAssembly",
												"src": "1442:192:0"
											},
											{
												"AST": {
													"nativeSrc": "1655:123:0",
													"nodeType": "YulBlock",
													"src": "1655:123:0",
													"statements": [
														{
															"nativeSrc": "1670:42:0",
															"nodeType": "YulVariableDeclaration",
															"src": "1670:42:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1683:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1683:1:0",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "1689:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "1689:1:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1692:18:0",
																				"nodeType": "YulLiteral",
																				"src": "1692:18:0",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1686:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "1686:2:0"
																		},
																		"nativeSrc": "1686:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1686:25:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1679:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "1679:3:0"
																},
																"nativeSrc": "1679:33:0",
																"nodeType": "YulFunctionCall",
																"src": "1679:33:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "1674:1:0",
																	"nodeType": "YulTypedName",
																	"src": "1674:1:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1726:14:0",
															"nodeType": "YulAssignment",
															"src": "1726:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "1735:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "1735:1:0"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "1738:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "1738:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1731:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "1731:3:0"
																},
																"nativeSrc": "1731:9:0",
																"nodeType": "YulFunctionCall",
																"src": "1731:9:0"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "1726:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "1726:1:0"
																}
															]
														},
														{
															"nativeSrc": "1754:13:0",
															"nodeType": "YulAssignment",
															"src": "1754:13:0",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "1762:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "1762:1:0"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "1765:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "1765:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1759:2:0",
																	"nodeType": "YulIdentifier",
																	"src": "1759:2:0"
																},
																"nativeSrc": "1759:8:0",
																"nodeType": "YulFunctionCall",
																"src": "1759:8:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "1754:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "1754:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "1754:1:0",
														"valueSize": 1
													},
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "1762:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "1689:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "1726:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "1738:1:0",
														"valueSize": 1
													}
												],
												"id": 133,
												"nodeType": "InlineAssembly",
												"src": "1646:132:0"
											},
											{
												"AST": {
													"nativeSrc": "1801:115:0",
													"nodeType": "YulBlock",
													"src": "1801:115:0",
													"statements": [
														{
															"nativeSrc": "1816:34:0",
															"nodeType": "YulVariableDeclaration",
															"src": "1816:34:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1829:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1829:1:0",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "1835:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "1835:1:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1838:10:0",
																				"nodeType": "YulLiteral",
																				"src": "1838:10:0",
																				"type": "",
																				"value": "0xFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1832:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "1832:2:0"
																		},
																		"nativeSrc": "1832:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1832:17:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1825:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "1825:3:0"
																},
																"nativeSrc": "1825:25:0",
																"nodeType": "YulFunctionCall",
																"src": "1825:25:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "1820:1:0",
																	"nodeType": "YulTypedName",
																	"src": "1820:1:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1864:14:0",
															"nodeType": "YulAssignment",
															"src": "1864:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "1873:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "1873:1:0"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "1876:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "1876:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1869:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "1869:3:0"
																},
																"nativeSrc": "1869:9:0",
																"nodeType": "YulFunctionCall",
																"src": "1869:9:0"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "1864:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "1864:1:0"
																}
															]
														},
														{
															"nativeSrc": "1892:13:0",
															"nodeType": "YulAssignment",
															"src": "1892:13:0",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "1900:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:0"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "1903:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "1903:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1897:2:0",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:0"
																},
																"nativeSrc": "1897:8:0",
																"nodeType": "YulFunctionCall",
																"src": "1897:8:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "1892:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "1892:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "1892:1:0",
														"valueSize": 1
													},
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "1900:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "1835:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "1864:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "1876:1:0",
														"valueSize": 1
													}
												],
												"id": 134,
												"nodeType": "InlineAssembly",
												"src": "1792:124:0"
											},
											{
												"AST": {
													"nativeSrc": "1937:111:0",
													"nodeType": "YulBlock",
													"src": "1937:111:0",
													"statements": [
														{
															"nativeSrc": "1952:30:0",
															"nodeType": "YulVariableDeclaration",
															"src": "1952:30:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1965:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1965:1:0",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "1971:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "1971:1:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1974:6:0",
																				"nodeType": "YulLiteral",
																				"src": "1974:6:0",
																				"type": "",
																				"value": "0xFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1968:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "1968:2:0"
																		},
																		"nativeSrc": "1968:13:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1968:13:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1961:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "1961:3:0"
																},
																"nativeSrc": "1961:21:0",
																"nodeType": "YulFunctionCall",
																"src": "1961:21:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "1956:1:0",
																	"nodeType": "YulTypedName",
																	"src": "1956:1:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1996:14:0",
															"nodeType": "YulAssignment",
															"src": "1996:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "2005:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2005:1:0"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2008:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2008:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2001:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "2001:3:0"
																},
																"nativeSrc": "2001:9:0",
																"nodeType": "YulFunctionCall",
																"src": "2001:9:0"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "1996:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "1996:1:0"
																}
															]
														},
														{
															"nativeSrc": "2024:13:0",
															"nodeType": "YulAssignment",
															"src": "2024:13:0",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "2032:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2032:1:0"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "2035:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2035:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2029:2:0",
																	"nodeType": "YulIdentifier",
																	"src": "2029:2:0"
																},
																"nativeSrc": "2029:8:0",
																"nodeType": "YulFunctionCall",
																"src": "2029:8:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2024:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "2024:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "2024:1:0",
														"valueSize": 1
													},
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "2032:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "1971:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "1996:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "2008:1:0",
														"valueSize": 1
													}
												],
												"id": 135,
												"nodeType": "InlineAssembly",
												"src": "1928:120:0"
											},
											{
												"AST": {
													"nativeSrc": "2069:109:0",
													"nodeType": "YulBlock",
													"src": "2069:109:0",
													"statements": [
														{
															"nativeSrc": "2084:28:0",
															"nodeType": "YulVariableDeclaration",
															"src": "2084:28:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:0",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:0",
																		"type": "",
																		"value": "3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2103:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "2103:1:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2106:4:0",
																				"nodeType": "YulLiteral",
																				"src": "2106:4:0",
																				"type": "",
																				"value": "0xFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2100:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2100:2:0"
																		},
																		"nativeSrc": "2100:11:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2100:11:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2093:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "2093:3:0"
																},
																"nativeSrc": "2093:19:0",
																"nodeType": "YulFunctionCall",
																"src": "2093:19:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "2088:1:0",
																	"nodeType": "YulTypedName",
																	"src": "2088:1:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2126:14:0",
															"nodeType": "YulAssignment",
															"src": "2126:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "2135:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2135:1:0"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2138:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2138:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2131:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "2131:3:0"
																},
																"nativeSrc": "2131:9:0",
																"nodeType": "YulFunctionCall",
																"src": "2131:9:0"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2126:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "2126:1:0"
																}
															]
														},
														{
															"nativeSrc": "2154:13:0",
															"nodeType": "YulAssignment",
															"src": "2154:13:0",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "2162:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2162:1:0"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "2165:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2165:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2159:2:0",
																	"nodeType": "YulIdentifier",
																	"src": "2159:2:0"
																},
																"nativeSrc": "2159:8:0",
																"nodeType": "YulFunctionCall",
																"src": "2159:8:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2154:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "2154:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "2154:1:0",
														"valueSize": 1
													},
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "2162:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "2103:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "2126:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "2138:1:0",
														"valueSize": 1
													}
												],
												"id": 136,
												"nodeType": "InlineAssembly",
												"src": "2060:118:0"
											},
											{
												"AST": {
													"nativeSrc": "2201:108:0",
													"nodeType": "YulBlock",
													"src": "2201:108:0",
													"statements": [
														{
															"nativeSrc": "2216:27:0",
															"nodeType": "YulVariableDeclaration",
															"src": "2216:27:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2229:1:0",
																		"nodeType": "YulLiteral",
																		"src": "2229:1:0",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2235:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "2235:1:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2238:3:0",
																				"nodeType": "YulLiteral",
																				"src": "2238:3:0",
																				"type": "",
																				"value": "0xF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2232:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2232:2:0"
																		},
																		"nativeSrc": "2232:10:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2232:10:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2225:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "2225:3:0"
																},
																"nativeSrc": "2225:18:0",
																"nodeType": "YulFunctionCall",
																"src": "2225:18:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "2220:1:0",
																	"nodeType": "YulTypedName",
																	"src": "2220:1:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2257:14:0",
															"nodeType": "YulAssignment",
															"src": "2257:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "2266:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2266:1:0"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2269:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2269:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2262:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "2262:3:0"
																},
																"nativeSrc": "2262:9:0",
																"nodeType": "YulFunctionCall",
																"src": "2262:9:0"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2257:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "2257:1:0"
																}
															]
														},
														{
															"nativeSrc": "2285:13:0",
															"nodeType": "YulAssignment",
															"src": "2285:13:0",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "2293:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2293:1:0"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "2296:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2296:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2290:2:0",
																	"nodeType": "YulIdentifier",
																	"src": "2290:2:0"
																},
																"nativeSrc": "2290:8:0",
																"nodeType": "YulFunctionCall",
																"src": "2290:8:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2285:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "2285:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "2285:1:0",
														"valueSize": 1
													},
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "2293:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "2235:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "2257:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "2269:1:0",
														"valueSize": 1
													}
												],
												"id": 137,
												"nodeType": "InlineAssembly",
												"src": "2192:117:0"
											},
											{
												"AST": {
													"nativeSrc": "2330:108:0",
													"nodeType": "YulBlock",
													"src": "2330:108:0",
													"statements": [
														{
															"nativeSrc": "2345:27:0",
															"nodeType": "YulVariableDeclaration",
															"src": "2345:27:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2358:1:0",
																		"nodeType": "YulLiteral",
																		"src": "2358:1:0",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2364:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "2364:1:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2367:3:0",
																				"nodeType": "YulLiteral",
																				"src": "2367:3:0",
																				"type": "",
																				"value": "0x3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2361:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2361:2:0"
																		},
																		"nativeSrc": "2361:10:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2361:10:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2354:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "2354:3:0"
																},
																"nativeSrc": "2354:18:0",
																"nodeType": "YulFunctionCall",
																"src": "2354:18:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "2349:1:0",
																	"nodeType": "YulTypedName",
																	"src": "2349:1:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2386:14:0",
															"nodeType": "YulAssignment",
															"src": "2386:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "2395:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2395:1:0"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2398:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2398:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2391:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "2391:3:0"
																},
																"nativeSrc": "2391:9:0",
																"nodeType": "YulFunctionCall",
																"src": "2391:9:0"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2386:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "2386:1:0"
																}
															]
														},
														{
															"nativeSrc": "2414:13:0",
															"nodeType": "YulAssignment",
															"src": "2414:13:0",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "2422:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2422:1:0"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "2425:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2425:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2419:2:0",
																	"nodeType": "YulIdentifier",
																	"src": "2419:2:0"
																},
																"nativeSrc": "2419:8:0",
																"nodeType": "YulFunctionCall",
																"src": "2419:8:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2414:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "2414:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "2414:1:0",
														"valueSize": 1
													},
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "2422:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "2364:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "2386:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "2398:1:0",
														"valueSize": 1
													}
												],
												"id": 138,
												"nodeType": "InlineAssembly",
												"src": "2321:117:0"
											},
											{
												"AST": {
													"nativeSrc": "2459:72:0",
													"nodeType": "YulBlock",
													"src": "2459:72:0",
													"statements": [
														{
															"nativeSrc": "2474:19:0",
															"nodeType": "YulVariableDeclaration",
															"src": "2474:19:0",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2486:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2486:1:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2489:3:0",
																		"nodeType": "YulLiteral",
																		"src": "2489:3:0",
																		"type": "",
																		"value": "0x1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2483:2:0",
																	"nodeType": "YulIdentifier",
																	"src": "2483:2:0"
																},
																"nativeSrc": "2483:10:0",
																"nodeType": "YulFunctionCall",
																"src": "2483:10:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "2478:1:0",
																	"nodeType": "YulTypedName",
																	"src": "2478:1:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2507:13:0",
															"nodeType": "YulAssignment",
															"src": "2507:13:0",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "2515:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2515:1:0"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "2518:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2518:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2512:2:0",
																	"nodeType": "YulIdentifier",
																	"src": "2512:2:0"
																},
																"nativeSrc": "2512:8:0",
																"nodeType": "YulFunctionCall",
																"src": "2512:8:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2507:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "2507:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "2507:1:0",
														"valueSize": 1
													},
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "2515:1:0",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "2486:1:0",
														"valueSize": 1
													}
												],
												"id": 139,
												"nodeType": "InlineAssembly",
												"src": "2450:81:0"
											}
										]
									},
									"functionSelector": "e6bcbc65",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mostSignificantBit",
									"nameLocation": "1092:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1119:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1111:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1111:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1110:11:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1150:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1142:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1142:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:11:0"
									},
									"scope": 142,
									"src": "1083:1457:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 143,
							"src": "60:2485:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:2512:0"
				},
				"id": 0
			}
		}
	}
}